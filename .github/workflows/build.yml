name: Build & test

on:
  push:
    branches:
      - main
      - snapshot
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  build:
    # Skip build if head commit contains 'skip ci'
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      TERM: dumb

    steps:
      - uses: actions/checkout@v2
        with:
          # Fetch expanded history, which is needed for affected module detection
          fetch-depth: '500'

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Decrypt secrets
        run: release/signing-setup.sh ${{ secrets.ENCRYPT_KEY }}

      - name: Build and spotless
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: spotlessCheck assemble --scan #metalavaCheckCompatibility --scan
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true
          configuration-cache-enabled: true

      - name: Clean secrets
        if: always()
        run: release/signing-cleanup.sh

#  test:
#    runs-on: macos-11.0
#    needs: build
#    timeout-minutes: 70
#
#    env:
#      TERM: dumb
#
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          # 0 == fetch all history, which is needed for affected module detection
#          fetch-depth: '0'
#
#      - name: Copy CI gradle.properties
#        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties
#
#      - name: set up JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#
#      - name: Decrypt secrets
#        run: release/signing-setup.sh ${{ secrets.ENCRYPT_KEY }}
#
#      - name: Run tests
#        uses: eskatos/gradle-command-action@v1
#        with:
#          arguments: test --scan
#          wrapper-cache-enabled: true
#          dependencies-cache-enabled: true
#          configuration-cache-enabled: true
#
#      - name: Clean secrets
#        if: always()
#        run: release/signing-cleanup.sh
#
#      - name: Upload logs
#        if: always()
#        uses: actions/upload-artifact@v2
#        with:
#          name: logs
#          path: logcat.txt
#
#      - name: Upload test results
#        if: always()
#        uses: actions/upload-artifact@v2
#        with:
#          name: test-results
#          path: "**/build/outputs/*/connected/*.xml"

  deploy:
    if: github.event_name == 'push' # only deploy for pushed commits (not PRs)

    runs-on: ubuntu-latest
    needs: [build] #,test]
    timeout-minutes: 30
    env:
      TERM: dumb

    steps:
      - uses: actions/checkout@v2

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Decrypt secrets
        run: release/signing-setup.sh ${{ secrets.ENCRYPT_KEY }}

      #- name: Generate cache key
      #  run: ./checksum.sh checksum.txt

      #- uses: actions/cache@v2
      #  with:
      #    path: |
      #      ~/.gradle/caches/modules-*
      #      ~/.gradle/caches/jars-*
      #      ~/.gradle/caches/build-cache-*
      #    key: gradle-${{ hashFiles('checksum.txt') }}

      - name: Deploy to Sonatype
        run: ./gradlew publish --no-parallel --stacktrace
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}

      - name: Clean secrets
        if: always()
        run: release/signing-cleanup.sh
